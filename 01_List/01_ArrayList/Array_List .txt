1. Null value can also be inserted.
2. It allows to Store duplicate data.
3. We can store heterogeneous type of data.

 
import java.util.*;

class Q01_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(10);
		al.add(20);
		al.add(30);
		al.add("A");
		al.add(40);
		al.add(50);
		al.add(60);
		al.add(null);
		al.add(70);
		al.add("Vishal Soner");
		al.add(80);
		al.add(90);
		
		for( Object o : al)
		{
			System.out.print( o + "  ");
		}
	}
}


 

10  20  30  A  40  50  60  null  70  Vishal Soner  80  90 


----------
 





  

1. Collection can store objects only and autoboxing and unboxing was introduce in 1.5 version
2. before 1.4 we pass manully parameter.

 
import java.util.*;

class Q02_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(50) );
		
		System.out.println(al);
	}
}

  

[10, 20, 30, 40, 50]

---------
 





import java.util.*;

class Q03_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer("Ram") );
		
		System.out.println(al);
	}
}

  

Exception in thread "main" java.lang.NumberFormatException: For input string: "Ram"

---------
 






import java.util.*;

class Q04_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(2147483648) );
		
		System.out.println(al);
	}
}

  

Q04_Array_List.java:13: error: integer number too large: 2147483648
                al.add( new Integer(2147483648) );

---------
 






import java.util.*;

class Q05_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(50) );
		
		for( Object o : al)
		{
			System.out.print( o + "  ");
		}
	}
}

  

10  20  30  40  50

---------
 






import java.util.*;

class Q06_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(50) );
		
		for( int i : al)
		{
			System.out.print( i + "  ");
		}
	}
}

  

error: incompatible types: Object cannot be converted to int
                for( int i : al)
                             ^

---------
 






import java.util.*;

class Q07_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(50) );
		
		for( Object o : al)
		{
			int i = (Integer)o;
			System.out.print( i + "  ");
		}
	}
}

  

10  20  30  40  50

---------
 






import java.util.*;

class Q08_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(50) );
		al.add( new String("Ram Ji") );
		
		for( Object o : al)
		{
			System.out.print( o + "  ");
		}
	}
}

  

10  20  30  40  50 Ram Ji

---------
 






import java.util.*;

class Q09_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(50) );
		al.add( new String("Ram Ji") );
		
		for( Object o : al)
		{
			int i = (Integer)o;
			System.out.print( i + "  ");
		}
	}
}

  

10  20  30  40  50  Exception in thread "main" java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
---------
 






import java.util.*;

class Q10_Array_List
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(50) );
		
		for( int i : al)
		{
			System.out.print( i + "  ");
		}
	}
}

  

10  20  30  40  50
---------
 






import java.util.*;

class Q11_Array_List_add
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(50) );
		al.add( null );
		
		for( int i : al)
		{
			System.out.print( i + "  ");
		}
	}
}

  

10  20  30  40  50  Exception in thread "main" java.lang.NullPointerException
---------
 






import java.util.*;

class Q12_Array_List_add
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>();
		
		al.add( new Integer(10) );
		al.add( new Integer(20) );
		al.add( new Integer(30) );
		al.add( new Integer(40) );
		al.add( new Integer(50) );
		al.add( null );
		
		for( Integer i : al)
		{
			System.out.print( i + "  ");
		}
	}
}

  

10  20  30  40  50  null
---------
 






import java.util.*;

class Q13_Array_List_add
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>();
		
		System.out.println( al.add(10) );
		System.out.println( al.add(20) );
		System.out.println( al.add(30) );
		System.out.println( al.add(40) );
		System.out.println( al.add(50) );
		
		System.out.print( al + "  ");
	}
}

  

true
true
true
true
true
[10, 20, 30, 40, 50]
---------
 






import java.util.*;

class Q14_Array_List_add
{
	public static void main(String args[])
	{
		int x[] = new int[-5];
		
		for(int i : x)
		{
			System.out.print( i + "  ");
		}
	}
}

  

Exception in thread "main" java.lang.NegativeArraySizeException
---------
 






import java.util.*;

class Q15_Array_List_add
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
		
		al.add(2, 35);
		
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]

[10, 20, 35, 30, 40, 50]


----------
 



import java.util.*;

class Q16_Array_List_add
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
		
		al.add(20, 35);
		
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]
Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 20, Size: 5


----------
 



import java.util.*;

class Q17_Array_List_set
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
		
		al.set(2, 300);
		
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]
[10, 20, 300, 40, 50]


----------
 



import java.util.*;

class Q18_Array_List_set
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
		
		al.set(20, 300);
		
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]
Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 20, Size: 5

----------
 



import java.util.*;

class Q19_Array_List_add
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
		
		al.add(5, 1000);
		
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]
[10, 20, 30, 40, 50, 1000]

----------
 



import java.util.*;

class Q20_Array_List_set
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
		
		al.set(5, 1000);
		
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]
Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 5, Size: 5

----------
 



import java.util.*;

class Q21_Array_List_set
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
		
		System.out.println( al.set(2, 1000) );
		
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]
30
[10, 20, 1000, 40, 50]

----------
 



import java.util.*;

class Q22_Array_List_add
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
		
		System.out.println( al.add(2, 1000) );
		
		System.out.println( al );
	}
}


 

error: 'void' type not allowed here
                System.out.println( al.add(2, 1000) );
                                          ^
----------
 





// if want to remove data from list on basis of content, We use Collection remove Method.
// And we want to remove data on basis of Index, We use list remove Method.

import java.util.*;

class Q23_Array_List_remove
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		System.out.println( al );
		
		al.remove(2);
		System.out.println( al );
		
		al.remove(5);
		System.out.println( al );
		
	}
}


 

[10, 20, 30, 40, 50]
[10, 20, 40, 50]
Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 5, Size: 4


	al.remove();
error: no suitable method found for remove(no arguments)
                al.remove();
                  ^

----------
 



import java.util.*;

class Q24_Array_List_remove
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		al.add("20");
		System.out.println( al );
		
		al.remove("20");
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50, 20]
[10, 20, 30, 40, 50]

----------
 



import java.util.*;

class Q25_Array_List_remove
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		System.out.println( al );
		
		al.remove( 20 );
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]
Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 20, Size: 5

----------
 



import java.util.*;

class Q26_Array_List_remove
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		System.out.println( al );
		
		al.remove( new Integer(20)  );
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]
[10, 30, 40, 50]

----------
 





// if want to remove data from list on basis of content, We use Collection remove Method.
// And we want to remove data on basis of Index, We use list remove Method.


import java.util.*;

class Q27_Array_List_remove
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>();  Both work Same

		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		System.out.println( al );
		
		System.out.println( al.remove(2)  );
		System.out.println( al );
	}
}


 

[10, 20, 30, 40, 50]
30
[10, 20, 40, 50]


----------
 



import java.util.*;

class Q28_Array_List_subList
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>();
		
		al.add(10);		al.add(20);		al.add(30);		al.add(40);		al.add(50);	
		al.add(60);		al.add(70);		al.add(80);		al.add(90);		al.add(100);
		System.out.println( al );
	
		System.out.println( al.subList(2, 5) );
		
	}
}


 

[10, 20, 30, 40, 50]
30
[10, 20, 40, 50]


----------
 



import java.util.*;

class Q29_Array_List_subList
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>();
		
		al.add(10);		al.add(20);		al.add(30);		al.add(40);
		al.add(50);
		al.add(60);
		al.add(70);
		al.add(80);
		al.add(90);
		al.add(100);
		System.out.println( al );
	
		// System.out.println( al.subList(2, 5) );
		// System.out.println( al.subList(0, 5) );
		// System.out.println( al.subList(8, 10) );
		// System.out.println( al.subList(10, 10) );
		// System.out.println( al.subList(20, 25) );
		System.out.println( al.subList(20, 10) );
		
	}
}


 
al.subList(int start, int end) );

Case - 1
al.subList(2, 5)
[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
[30, 40, 50]


Case - 2
al.subList(0, 5)
[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
[10, 20,30, 40, 50]


Case - 3
al.subList(8, 10)
[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
[90, 100]


Case - 4
al.subList(10, 10)
[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
[]


Case - 5
al.subList(20, 25)
[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
IndexOutOfBoundsException


Case - 6
al.subList(8, 4)
[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
IllegalArgumentException


----------
 



import java.util.*;

class Q30_Array_List_subList
{
	public static void main(String args[])
	{
		ArrayList<Integer> al1 = new ArrayList<>();
		
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		al1.add(60);		al1.add(70);		al1.add(80);		al1.add(90);		al1.add(100);
		System.out.println( al1 );

	
		ArrayList<Integer> al2 = new ArrayList<>();
		al2 = al1.subList(2, 5);
		System.out.println( al2 );
	}
}


 

Error same for Both Error
ArrayList<Integer> al2 = new ArrayList<>();
	al2 = al1.subList(2, 5);
or
ArrayList<Integer> al2 = al1.subList(2, 5);


List<Integer> cannot be converted to ArrayList<Integer>
               al2 = al1.subList(2, 5);
                                ^
----------
 



import java.util.*;

class Q31_Array_List_subList
{
	public static void main(String args[])
	{
		ArrayList<Integer> al1 = new ArrayList<>();
		
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		al1.add(60);		al1.add(70);		al1.add(80);		al1.add(90);		al1.add(100);
		System.out.println( al1 );

	
		List al2 = al1.subList(2, 5);
		System.out.println( al2 );
	}
}


 

[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
[30, 40, 50]
----------
 



import java.util.*;

class Q32_Array_List_subList
{
	public static void main(String args[])
	{
		ArrayList<Integer> al1 = new ArrayList<>();
		
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		al1.add(60);		al1.add(70);		al1.add(80);		al1.add(90);		al1.add(100);
		System.out.println( al1 );

		List al2 = al1.subList(2, 5);
		System.out.println( al2 );
		System.out.println();
		
		al1.set(2, 5000);
		System.out.println( al1 );
		System.out.println( al2 );
	}
}


 

[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
[30, 40, 50]

[10, 20, 5000, 40, 50, 60, 70, 80, 90, 100]
[5000, 40, 50]
----------
 



import java.util.*;

class Q33_Array_List_add
{
	public static void main(String args[])
	{
		ArrayList al1 = new ArrayList();
		
		al1.add(10);
		al1.add(20);
		al1.add(30);
		al1.add(40);
		al1.add(50);
		
		ArrayList al2 = new ArrayList();
		
		al2.add(100);
		al2.add(200);
		al2.add(300);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		
		al1.add(al2);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
	}
}


 

[10, 20, 30, 40, 50]
[100, 200, 300]

[10, 20, 30, 40, 50, [100, 200, 300]]
[100, 200, 300]
----------
 



import java.util.*;

class Q34_Array_List_add
{
	public static void main(String args[])
	{
		ArrayList al1 = new ArrayList();
		
		al1.add(10);
		al1.add(20);
		al1.add(30);
		al1.add(40);
		al1.add(50);
		
		ArrayList al2 = new ArrayList();
		
		al2.add(100);
		al2.add(200);
		al2.add(300);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		
		al1.add(2, al2);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
	}
}


 

[10, 20, 30, 40, 50]
[100, 200, 300]
[10, 20, [100, 200, 300], 30, 40, 50]
[100, 200, 300]


----------
 






   
	removeAll(...);
		if one element is remove its return true otherwise its return false. 
  

import java.util.*;

class Q35_Array_List_removeAll
{
	public static void main(String args[])
	{
		ArrayList al1 = new ArrayList();
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		
		
		ArrayList al2 = new ArrayList();
		al2.add(100);		al2.add(200);		al2.add(300);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		System.out.println( al1.removeAll(al2) );
		
		System.out.println( al1 );
		System.out.println( al2 );
		
	}
}


 

[10, 20, 30, 40, 50]
[100, 200, 300]

false

[10, 20, 30, 40, 50]
[100, 200, 300]


----------
 







import java.util.*;

class Q36_Array_List_removeAll
{
	public static void main(String args[])
	{
		ArrayList al1 = new ArrayList();
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		
		
		ArrayList al2 = new ArrayList();
		al2.add(10);		al2.add(20);		al2.add(300);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		System.out.println( al1.removeAll(al2) );
		
		System.out.println( al1 );
		System.out.println( al2 );
		
	}
}


 

[10, 20, 30, 40, 50]
[10, 20, 300]

true

[30, 40, 50]
[10, 20, 300]



----------
 







  
	.retainAll() method remove dismatch data and store only match data.

 

import java.util.*;

class Q37_Array_List_retainAll
{
	public static void main(String args[])
	{
		ArrayList al1 = new ArrayList();
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		
		
		ArrayList al2 = new ArrayList();
		al2.add(10);		al2.add(20);		al2.add(300);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		System.out.println( al1.retainAll(al2) );
		
		System.out.println( al1 );
		System.out.println( al2 );
		
	}
}


 


[10, 20, 30, 40, 50]
[10, 20, 300]
true
[10, 20]
[10, 20, 300]



----------
 







import java.util.*;

class Q38_Array_List_addAll
{
	public static void main(String args[])
	{
		ArrayList al1 = new ArrayList();
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		
		al1.addAll(55);
		System.out.println( al1 );
	}
}


 


error: no suitable method found for addAll(int)
                al1.addAll(55);
                   ^



----------
 







import java.util.*;

class Q39_Array_List_addAll
{
	public static void main(String args[])
	{
		// ArrayList<Integer> al1 = new ArrayList<>(); 					//It's work same

		ArrayList al1 = new ArrayList();
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		
		ArrayList al2 = new ArrayList();
		al2.add(100);		al2.add(200);		al2.add(300);		al2.add(400);		al2.add(500);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		al1.addAll(al2);

		System.out.println( al1 );
		System.out.println( al2 );
	}
}


 


[10, 20, 30, 40, 50]
[100, 200, 300, 400, 500]
[10, 20, 30, 40, 50, 100, 200, 300, 400, 500]
[100, 200, 300, 400, 500]



----------
 







import java.util.*;

class Q40_Array_List_addAll
{
	public static void main(String args[])
	{
		ArrayList<Integer> al1 = new ArrayList<>();
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		
		ArrayList<Number> al2 = new ArrayList<>();
		al2.add(100);		al2.add(200);		al2.add(300);		al2.add(400);		al2.add(500);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		al1.addAll(al2);

		System.out.println( al1 );
		System.out.println( al2 );
	}
}


 


error: no suitable method found for addAll(ArrayList<Number>)
                al1.addAll(al2);


----------
 







import java.util.*;

class Q41_Array_List_retainAll
{
	public static void main(String args[])
	{
		ArrayList<Integer> al1 = new ArrayList<>();
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		
		ArrayList<Number> al2 = new ArrayList<>();
		al2.add(10);		al2.add(20);		al2.add(300);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		System.out.println( al1.retainAll(al2) );

		System.out.println( al1 );
		System.out.println( al2 );
	}
}


 

[10, 20, 30, 40, 50]
[10, 20, 300]
true
[10, 20]
[10, 20, 300]

----------
 







import java.util.*;

class Q42_Array_List_retainAll
{
	public static void main(String args[])
	{
		ArrayList<Integer> al1 = new ArrayList<>();
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		
		ArrayList<Number> al2 = new ArrayList<>();
		al2.add(100);		al2.add(200);		al2.add(300);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		System.out.println( al1.retainAll(al2) );

		System.out.println( al1 );
		System.out.println( al2 );
	}
}


 

[10, 20, 30, 40, 50]
[100, 200, 300]
true
[]
[100, 200, 300]

----------
 







import java.util.*;

class Q43_Array_List_retainAll
{
	public static void main(String args[])
	{
		ArrayList<Integer> al1 = new ArrayList<>();
		al1.add(10);		al1.add(20);		al1.add(30);		al1.add(40);		al1.add(50);
		
		ArrayList<Number> al2 = new ArrayList<>();
		al2.add(10);		al2.add(20);		al2.add(30);		al2.add(40);		al2.add(50);
		
		System.out.println( al1 );
		System.out.println( al2 );
		
		System.out.println( al1.retainAll(al2) );

		System.out.println( al1 );
		System.out.println( al2 );
	}
}


 

[10, 20, 30, 40, 50]
[10, 20, 30, 40, 50]
false
[10, 20, 30, 40, 50]
[10, 20, 30, 40, 50]

----------
 







import java.util.*;

class Q44_Array_List_indexOf
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>();
		al.add(10);		
		al.add(20);		
		al.add(30);		
		al.add(40);		
		al.add(50);
		al.add(60);
		al.add(70);
		al.add(80);
		
		System.out.println( al );
		
		System.out.println( al.indexOf(10) ); 	//	 0
		System.out.println( al.indexOf(50) );	//	 4
		System.out.println( al.indexOf(80) );	//	 7
		System.out.println( al.indexOf(800) );	//	-1
		System.out.println( al.indexOf("50") ); //	-1
	}
}


 

0
4
7
-1
-1

----------
 







import java.util.*;

class Q45_Array_List_get
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>();
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);		al.add(60);
		al.add(70);		al.add(80);
		
		System.out.println( al );
		
		System.out.println( al.get(2) );
		System.out.println( al.get(20) );
	}
}


 

[10, 20, 30, 40, 50, 60, 70, 80]
30
Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 20, Size: 8

----------
 





import java.util.*;

class Q46_Array_List_get
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>(); //Because of this.
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);		al.add(60);
		al.add(70);		al.add(80);
		
		System.out.println( al );
		
		int x = al.get(2);
		System.out.println( x );
	}
}


 

[10, 20, 30, 40, 50, 60, 70, 80]
30

----------
 





import java.util.*;

class Q47_Array_List_get
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);		al.add(60);
		al.add(70);		al.add(80);
		
		System.out.println( al );
		
		int x = al.get(2);
		System.out.println( x );
	}
}


 

error: incompatible types: Object cannot be converted to int
                int x = al.get(2);
                              ^
----------
 





import java.util.*;

class Q48_Array_List_get
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);		al.add(60);
		al.add(70);		al.add(80);
		
		System.out.println( al );
		
		int x = (int)al.get(2);
		System.out.println( x );
	}
}


 

[10, 20, 30, 40, 50, 60, 70, 80]
30

----------
 





import java.util.*;

class Q49_Array_List_size
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>(); //Because of this.
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		System.out.println( al.size() );
		
		al.add(60);
		System.out.println( al.size() );
	}
}


 

5
6

----------
 




  
converting Array List into Array is Done by   .toArray().

 
import java.util.*;

class Q50_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); //It work same.

		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		Object o[] = new Object[ al.size() ];
		
		o = al.toArray();
		
		
		System.out.println( al );
		for(int i = 0; i < al.size(); i++)
		{
			System.out.print( o[i] + ", " );
		}
	}
}


 

[10, 20, 30, 40, 50]
10, 20, 30, 40, 50,
----------
 











import java.util.*;

class Q51_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); //It work same.
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		Object o[] = al.toArray();
		
		// Object o[] = null;
		// o = al.toArray();
		
		System.out.println( al );
		for(int i = 0; i < al.size(); i++)
		{
			System.out.print( o[i] + ", " );
		}
	}
}


 

[10, 20, 30, 40, 50]
10, 20, 30, 40, 50,




if : 

	Object o[] = null;
	o = al.toArray();

	[10, 20, 30, 40, 50]
	10, 20, 30, 40, 50,

----------
 





import java.util.*;

class Q52_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); //It work same.
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		Object o[] = null;
		o = al.toArray();
		
		System.out.println( al );
		
		for(int i = 0; i < al.size(); i++)
			System.out.print( o[i] + ", " );
		
		o[2] = 25;
		
		System.out.println( al );
		
		for(int i = 0; i < al.size(); i++)
			System.out.print( o[i] + ", " );
		
	}
}


 

[10, 20, 30, 40, 50]
10, 20, 30, 40, 50, 

[10, 20, 30, 40, 50]
10, 20, 25, 40, 50,


----------
 





import java.util.*;

class Q53_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); //It work same.
		
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		// Integer o[] = al.toArray();	//It work same.
		Integer o[] = new Integer[al.size()];
		o = al.toArray();
		
		System.out.println( al );
		
		for(int i = 0; i < al.size(); i++)
			System.out.print( o[i] + ", " );
		
	}
}


 

 error: incompatible types: Object[] cannot be converted to Integer[]
                o = al.toArray();
                              ^
----------
 



import java.util.*;

class Q54_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); //It work same.
		
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		Object o[] = new Object[al.size() ];
		al.toArray(o);
		
		System.out.println( al );
		
		for(int i = 0; i < al.size(); i++)
			System.out.print( o[i] + ", " );
		
	}
}


 
[10, 20, 30, 40, 50]
 10, 20, 30, 40, 50,
 
----------
 







import java.util.*;

class Q55_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); //It work same.
		
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		Object o[] = null;
		al.toArray(o);
		
		System.out.println( al );
		
		for(int i = 0; i < al.size(); i++)
			System.out.print( o[i] + ", " );
		
	}
}


 

Exception in thread "main" java.lang.NullPointerException



if : 
	Object o[];
	al.toArray(o);

 error: variable o might not have been initialized
                o = al.toArray(o);
                               ^

----------
 










import java.util.*;

class Q56_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); //It work same.
		
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		Integer i[] = new Integer[ al.size() ];
		al.toArray(i);
		
		System.out.println( al );
		
		for(int j = 0; j < al.size(); j++)
			System.out.print( i[j] + ", " );
		
	}
}


 


[10, 20, 30, 40, 50]
 10, 20, 30, 40, 50,


----------
 




import java.util.*;

class Q57_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>(); 
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		int i[] = new int[ al.size() ];
		i = al.toArray(i);
		
		System.out.println( al );
		
		for(int j = 0; j < al.size(); j++)
			System.out.print( i[j] + ", " );
		
	}
}


 
error: no suitable method found for toArray(int[])
                i = al.toArray(i);
                      ^

----------
 












import java.util.*;

class Q58_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList<Integer> al = new ArrayList<>(); 
		
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		Integer i[] = new Integer[ al.size() ];
		i = al.toArray(i);
		
		System.out.println( al );
		
		for(int j = 0; j < al.size(); j++)
			System.out.print( i[j] + ", " );
		
	}
}


 
[10, 20, 30, 40, 50]
 10, 20, 30, 40, 50,
----------
 





import java.util.*;

class Q59_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		Integer i[] = new Integer[ al.size() ];
		i = al.toArray(i);
		
		System.out.println( al );
		
		for(int j = 0; j < al.size(); j++)
			System.out.print( i[j] + ", " );
		
	}
}


 
if : 	i = al.toArray(i);

error: incompatible types: Object[] cannot be converted to Integer[]
                i = al.toArray(i);
                              ^
----------
 















import java.util.*;

class Q60_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		Integer i[] = new Integer[ al.size() ];
		al.toArray(i);
		
		System.out.println( al );
		
		for(int j = 0; j < al.size(); j++)
			System.out.print( i[j] + ", " );
		
	}
}


 
[10, 20, 30, 40, 50]
 10, 20, 30, 40, 50,

----------
 





import java.util.*;

class Q61_Array_List_toArray
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		al.add("60");	//String
		
		Integer i[] = new Integer[ al.size() ];
		al.toArray(i);
		
		System.out.println( al );
		
		for(int j = 0; j < al.size(); j++)
			System.out.print( i[j] + ", " );
		
	}
}


 


Exception in thread "main" java.lang.ArrayStoreException

----------
 





import java.util.*;

class Q62_Array_List_isEmpty
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); // Work Same
		
		System.out.println( al.isEmpty() );
		
		
		al.add(10);		al.add(20);		al.add(30);		
		al.add(40);		al.add(50);	
		
		System.out.println( al.isEmpty() );
	}
}


 

true
false
----------
 





import java.util.*;

class Q63_Array_List_isEmpty
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); // Work Same
		
		al.add(10);		al.add(20);		al.add(30);
		al.add(40);		al.add(50);	
		
		System.out.println( al.isEmpty() );
		
		for(int i = 0; i < al.size(); i++)
		{
			al.remove(i);
		}
		
		System.out.println( al.isEmpty() );
	}
}


 

false
false
----------
 





import java.util.*;

class Q64_Array_List_isEmpty
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); // Work Same
		
		al.add(10);		al.add(20);		al.add(30);
		al.add(40);		al.add(50);	
		
		System.out.println( al.isEmpty() );
		
		for(int i = 0; i < al.size(); i++)
		{
			al.remove(i);
		}
		
		System.out.println( al );
		System.out.println( al.isEmpty() );
	}
}


 


false
[20, 40]
false




[10, 20, 30, 40, 50];
i = 0		[20, 30, 40, 50]; 	 remove(10)
i = 1		[20, 40, 50];		 remove(30)
i = 2		[20, 40, 50];		 remove(50)

[20, 40]
----------
 





import java.util.*;

class Q65_Array_List_isEmpty
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); // Work Same
		
		al.add(10);		al.add(20);		al.add(30);
		al.add(40);		al.add(50);	
		
		System.out.println( al );
		
		int n = al.size();
		for(int i = 0; i < n; i++)
		{
			al.remove(i);
		}
		
	}
}


 
[10, 20, 30, 40, 50]
Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 3, Size: 2


----------
 





import java.util.*;

class Q66_Array_List_isEmpty
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		// ArrayList<Integer> al = new ArrayList<>(); // Work Same
		
		al.add(10);		al.add(20);		al.add(30);
		al.add(40);		al.add(50);	
		
		System.out.println( al );
		System.out.println( al.isEmpty() );
		
		int n = al.size();
		for(int i = 0; i < n; i++)
		{
			al.remove(0);
		}
		
		System.out.println( al );
		System.out.println( al.isEmpty() );
	}
}


 
[10, 20, 30, 40, 50]
false

[]
true


----------
 




import java.util.*;

class Q67_Array_List_ArrayStoreException
{
	public static void main(String args[])
	{
		Object io[] = new String[5];
		// io[2] = 55;
		
		for(int i = 0; i < io.length; i++)
		{
			System.out.print( io[i] + " ,  ");
		}
	}
}


 

null ,  null ,  null ,  null ,  null ,

----------
 







import java.util.*;

class Q68_Array_List_ArrayStoreException
{
	public static void main(String args[])
	{
		Object io[] = new String[5];
		io[2] = 55;
		
		for(int i = 0; i < io.length; i++)
		{
			System.out.print( io[i] + " ,  ");
		}
	}
}


 

Exception in thread "main" java.lang.ArrayStoreException: java.lang.Integer

----------
 








import java.util.*;

class Q69_Array_List_ArrayStoreException
{
	public static void main(String args[])
	{
		Object io[] = new Double[5];
		io[2] = 55;
		
		for(int i = 0; i < io.length; i++)
		{
			System.out.print( io[i] + " ,  ");
		}
	}
}


 

Exception in thread "main" java.lang.ArrayStoreException: java.lang.Integer

----------
 








  

	One Collection Parameter.
	
 
import java.util.*;

class Q70_Array_List_One_Collection_Constructor
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		al.add(60);
		
		ArrayList al2 = new ArrayList(al);
		
		System.out.println( al2 );
	}
}


 

[10, 20, 30, 40, 50, 60]

----------
 








import java.util.*;

class Employee
{
	
}

class Q71_Array_List_Store_Object
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(new Employee() );
		al.add(new Employee() );
		al.add(new Employee() );
		al.add(new Employee() );
		al.add(new Employee() );
		
		System.out.println( al );
	}
}


 


[Employee@15db9742, Employee@6d06d69c, Employee@7852e922, Employee@4e25154f, Employee@70dea4e]
-------------------------
 








import java.util.*;

class Employee
{
	int id;
	String name;
	Employee(int id, String name)
	{
		this.id   = id;
		this.name = name;
	}
}

class Q72_Array_List_Store_Object
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(new Employee(101, "Aman") );
		al.add(new Employee(102, "Bhanu") );
		al.add(new Employee(103, "Chandan") );
		al.add(new Employee(104, "Ritesh") );
		al.add(new Employee(105, "Vishal") );
		
		System.out.println( al );
	}
}


 
Note :- Because Employee class doesn't override toString Method.

[Employee@15db9742, Employee@6d06d69c, Employee@7852e922, Employee@4e25154f, Employee@70dea4e]
-------------------------
 








import java.util.*;

class Employee
{
	int id;
	String name;
	Employee(int id, String name)
	{
		this.id   = id;
		this.name = name;
	}
	
	public String toString()
	{
		return "" + id + ":" + name ;
	}
}

class Q73_Array_List_Store_Object
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(new Employee(101, "Aman") );
		al.add(new Employee(102, "Bhanu") );
		al.add(new Employee(103, "Chandan") );
		al.add(new Employee(104, "Ritesh") );
		al.add(new Employee(105, "Vishal") );
		
		System.out.println( al );
	}
}


 

Because Employee class doesn't override toString Method. 
If we Override toString Method.


[101:Aman, 102:Bhanu, 103:Chandan, 104:Ritesh, 105:Vishal]
-------------------------
 








import java.util.*;

class Employee
{
	int id;
	String name;
	Employee(int id, String name)
	{
		this.id   = id;
		this.name = name;
	}
	
	public String toString()
	{
		return "" + id + ":" + name ;
	}
}

class Q74_Array_List_Store_Object
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(new Employee(101, "Aman") );
		al.add(new Employee(102, "Bhanu") );
		al.add(new Employee(103, "Chandan") );
		al.add(new Employee(104, "Ritesh") );
		al.add(new Employee(105, "Vishal") );
		
		for( Employee e : al )
		{
			System.out.println( e );
		}
	}
}


 

error: incompatible types: Object cannot be converted to Employee
                for( Employee e : al )
                                  ^

-------------------------
 








import java.util.*;

class Employee
{
	int id;
	String name;

	public String toString()
	{
		return "" + id + ":" + name ;
	}
}

class Q75_Array_List_Store_Object
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(new Employee(101, "Aman") );
		al.add(new Employee(102, "Bhanu") );
		al.add(new Employee(103, "Chandan") );
		al.add(new Employee(104, "Ritesh") );
		al.add(new Employee(105, "Vishal") );
		
		for( Object o : al )
		{
			System.out.println( o );
		}
	}
}


 

101:Aman
102:Bhanu
103:Chandan
104:Ritesh
105:Vishal

-------------------------
 








import java.util.*;

class Employee
{
	int id;
	String name;
	
	Employee(int id, String name)
	{
		this.id = id;
		this.name = name;
	}

	public String toString()
	{
		return "" + id + ":" + name ;
	}
}

class Q76_Array_List_Store_Object
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(new Employee(101, "Aman") );
		al.add(new Employee(102, "Bhanu") );
		al.add(new Employee(103, "Chandan") );
		al.add(new Employee(104, "Ritesh") );
		al.add(new Employee(105, "Vishal") );
		
		for( Object o : al )
		{
			Employee e = (Employee) o;
			System.out.println( e );
		}
	}
}


 

101:Aman
102:Bhanu
103:Chandan
104:Ritesh
105:Vishal

-------------------------
 








import java.util.*;

class Employee
{
	int id;
	String name;
	
	Employee(int id, String name)
	{
		this.id = id;
		this.name = name;
	}

	public String toString()
	{
		return "" + id + ":" + name ;
	}
}

class Q77_Array_List_Store_Object
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList();
		
		al.add(new Employee(101, "Aman") );
		al.add(new Employee(102, "Bhanu") );
		al.add(new Employee(103, "Chandan") );
		al.add(new Employee(104, "Ritesh") );
		al.add(new Employee(105, "Vishal") );
		
		for( Object o : al )
		{
			Employee e = (Employee) o;
			System.out.println( e.id );
		}
	}
}


 

101
102
103
104
105

-------------------------
 








import java.util.*;

class Q80_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList(10);
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
	}
}


/*

[10, 20, 30, 40, 50]

--------------------------------------------------------------------------------------------------------------
*/








import java.util.*;

class Q81_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList(-10);
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		
		System.out.println( al );
	}
}


/*

Exception in thread "main" java.lang.IllegalArgumentException: Illegal Capacity: -10

--------------------------------------------------------------------------------------------------------------
*/








import java.util.*;

class Q82_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList(5);
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		System.out.println( al );
		
		al.add(60);
		al.add(70);
		System.out.println( al );
	}
}


/*

[10, 20, 30, 40, 50]
[10, 20, 30, 40, 50, 60, 70]

--------------------------------------------------------------------------------------------------------------
*/








import java.util.*;

class Q83_Array_List
{
	public static void main(String args[])
	{
		ArrayList al = new ArrayList(0);
		// ArrayList al = new ArrayList(-0);		//Work Same
		
		al.add(10);
		al.add(20);
		al.add(30);
		al.add(40);
		al.add(50);
		System.out.println( al );
		
		al.add(60);
		al.add(70);
		System.out.println( al );
	}
}


/*

[10, 20, 30, 40, 50]
[10, 20, 30, 40, 50, 60, 70]

--------------------------------------------------------------------------------------------------------------
*/








